# $Revision$
var w=2
var p=4
var s=2
var l=4
var f=4
var d=8
var NAME=minixST
var M=m68k2
var MLIB=lib/{M}/tail_
var RT=lib/minixST/head_
var LIB=lib/minixST/tail_
var CPP_F=-D__unix -D_ATARI_ST
var SYSINCLUDES=-I{EM}/lib/minixST/include -I{EM}/lib/minix/include
var ALIGN=-a0:4 -a1:4 -a2:4 -a3:4
var C_LIB={EM}/{LIB}cc.1s {EM}/{LIB}cc.2g
var OLD_C_LIB={C_LIB}
var MACHOPT_F=-ml10
name be
	from .m.g
	to .s
	program {EM}/lib.bin/{M}/cg
	mapflag -gdb GF=-gdb
	args {GF?} <
	stdout
	need .e
end
name as
	from .s.so
	to .o
	program {EM}/lib.bin/{M}/as
	args - -o > <
	prep cond
end
name led
	from .o.a
	to .out
	program {EM}/lib.bin/em_led
	mapflag -l* LNAME={EM}/{LIB}*
#	mapflag -i SEPID=-b1:0
	mapflag -fp LIBFP={EM}/{NLIB}fp
	mapflag -ansi C_LIB={EM}/{LIB}ac
	args {ALIGN} {SEPID?} -c (.e:{HEAD}={EM}/{RT}em) \
		({RTS}:.ocm.bas={EM}/{RT}cc) \
		({RTS}{ANSI?}:.c={EM}/{RT}cc) \
		({RTS}{ANSI?}:.cansi={EM}/{RT}ac) \
		({RTS}:.p={EM}/{RT}pc) \
		({RTS}:.mod={EM}/{RT}m2) \
		-o > < \
		(.p:{TAIL}={EM}/{LIB}pc) \
		(.bas:{TAIL}={EM}/{LIB}bc) \
		(.ocm:{TAIL}={EM}/{LIB}ocm) \
		(.mod:{TAIL}={EM}/{LIB}m2) \
		(.ocm.bas:{TAIL}={OLD_C_LIB}) \
		(.c:{TAIL}={C_LIB}) \
		{LIBFP?} \
		(.e:{TAIL}={EM}/{LIB}mon {EM}/{MLIB}em {EM}/lib/m68k2/end_em)
	linker
end
name cv
	from .out
	to .cv
	program {EM}/lib.bin/minixST/cv
	args < >
	outfile a.out
end
