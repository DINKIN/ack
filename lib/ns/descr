# $Revision$
var w=4
var p=4
var s=2
var l=4
var f=4
var d=8
var M=ns
var NAME=NS
var LIB=lib/{M}/tail_
var RT=lib/{M}/head_
var CPP_F=-D__unix
var INCLUDES=-I{EM}/include/_tail_mon
var C_LIB={EM}/{LIB}cc.1s {EM}/{LIB}cc.2g
var OLD_C_LIB={C_LIB}
var ALIGN=-a0:2 -a1:2 -a2:2 -a3:2
name be
	from .m.g
	to .s
	program {EM}/lib.bin/{M}/ncg
	args <
	stdout
	need .e
end
name as
	from .s
	to .o
	program {EM}/lib.bin/{M}/as
	args - -o > <
	prep cond
end
name led
	from .o.a
	to .out
	program {EM}/lib.bin/em_led
	mapflag -l* LNAME={EM}/{LIB}*
	mapflag -ansi C_LIB={EM}/{LIB}ac
	args {ALIGN} (.e:{HEAD}={EM}/{RT}em) \
		({RTS}:.ocm.bas={EM}/{RT}cc) \
		({RTS}{ANSI?}:.c={EM}/{RT}cc) \
		({RTS}{ANSI?}:.cansi={EM}/{RT}ac) \
		({RTS}:.f={EM}/{RT}ac) \
		({RTS}:.p={EM}/{RT}pc) \
		({RTS}:.mod={EM}/{RT}m2) \
		-o > < \
		(.p:{TAIL}={EM}/{LIB}pc) \
		(.bas:{TAIL}={EM}/{LIB}bc) \
		(.ocm:{TAIL}={EM}/{LIB}ocm) \
		(.mod:{TAIL}={EM}/{LIB}m2) \
		(.f:{TAIL}={EM}/{LIB}f77 {EM}/{LIB}ac) \
		(.ocm.bas:{TAIL}={OLD_C_LIB}) \
		(.c:{TAIL}={C_LIB}) \
		(.e:{TAIL}={EM}/{LIB}mon {EM}/{LIB}mon2 {EM}/{LIB}em {EM}/lib/{M}/end_em)
	linker
end
